#!/usr/bin/env python

import sys
import networkx as nx
import matplotlib.pyplot as plt
import argparse

class View:

    def __init__(self, graphfile):

        self.__graph = nx.DiGraph()
        self.__graphfile = graphfile

    def bootstrap(self, infile):
        print ("Bootstrapping graph from %s" % (infile))
        with open(infile, 'r') as f:
            for node in set([x.strip() for x in f.readlines()]):
                self.__graph.add_node(node)

    def read(self):
        print ("Reading graph from %s" % (self.__graphfile))
        self.__graph = nx.read_adjlist(self.__graphfile)
        print ("Read %d nodes" % (nx.number_of_nodes(self.__graph)))

    def view(self):
        pos = nx.spring_layout(self.__graph)
        nx.draw_networkx_nodes(self.__graph, pos, cmap=plt.get_cmap('jet'))
        plt.show()

def main():

    parser = argparse.ArgumentParser(description = 'Play Store relation viewer')
    parser.add_argument('-g', '--graph', action='store', required='True', help='Graph file')
    args = parser.parse_args()

    r = View(args.graph)
    r.read()
    r.view()

if __name__ == '__main__':
    main()
